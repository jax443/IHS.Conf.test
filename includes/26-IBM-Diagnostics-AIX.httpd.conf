# Enable IBM HTTP Server diagnostic features.
#
# CoreDumpDirectory directory: Sets the location where the server will
# attempt to put a core dump.  The child processes running as 'User'
# (see User config directive above) must have permission to write to 
# this directive.  The filesystem will have to be large enough to hold 
# potentially large core files.
#
# The /tmp directory is often sufficient.
#
CoreDumpDirectory /tmp

# mod_mpmstats logs statistics about server activity to the main
# error log.  No records are written while the server is idle.
LoadModule mpmstats_module modules/debug/mod_mpmstats.so
<IfModule mod_mpmstats.c>
# Write a record every 10 minutes (if server isn't idle).
# Recommendation: Lower this interval to 60 seconds, which will
# result in the error log growing faster but with more accurate
# information about server load.
ReportInterval 600
# Include details of active module in the statistics.
TrackModules On
</IfModule>

# EnableExceptionHook allows modules such as mod_backtrace and
# mod_whatkilledus to run after a crash and gather additional
# diagnostic information.
# EnableExceptionHook must be "on" in order to use mod_backtrace or
# mod_whatkilledus.
EnableExceptionHook On

# mod_whatkilledus will record information about the current request
# and connection to the error log at the time of a crash.  This is
# important information for diagnosing the cause of the crash.
LoadModule whatkilledus_module modules/debug/mod_whatkilledus.so
WhatKilledUsLog /webLogs/HTTPServer/whatkilledus_log

# mod_net_trace will record actual data sent/received from the client
# and on proxy connections, even for SSL connections.  Unlike an IP
# trace, interaction with the platform network APIs can be seen.
# The following example configuration can be activated by uncommenting
# the LoadModule directive.
#LoadModule net_trace_module modules/debug/mod_net_trace.so
<IfModule mod_net_trace.c>
NetTraceFile /tmp/nettrace
NetTrace client * dest file event senddata=65535 event recvdata=65535
</IfModule>



